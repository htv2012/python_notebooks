; ======================================================================
; Table of contents
; ======================================================================

[loggers]
; List all the loggers here, see the [logger_*] sections
keys=root,simpleExample,consoleAndFileLogger

[handlers]
; List all the handlers here, see the [handler_*] sections
keys=consoleHandler,fileHandler

[formatters]
; List all the formatters here, see the [formatter_*] sections
keys=simpleFormatter

; ======================================================================
; Root Logger
; ======================================================================

; The root logger. This is the default logger. If the getLogger function
; receives a name it does not recognize, it will return the root logger.
[logger_root]
level=DEBUG

; One or more handlers, separated by comma
handlers=consoleHandler


; ======================================================================
; simpleExample Logger
; ======================================================================
; This logger is returned for logging.getLogger('simpleExample')
[logger_simpleExample]

; Same as the name passed to getLogger
qualname=simpleExample

level=DEBUG
handlers=consoleHandler

; propagate determine if the logging request (info, debug...) is
; propagated to the parent logger (root in this case). Valid values are
; 1 and 0
propagate=0


; ======================================================================
; consoleAndFileLogger Logger
; ======================================================================
[logger_consoleAndFileLogger]
level=DEBUG
qualname=consoleAndFileLogger
handlers=fileHandler

; ======================================================================
; Handlers
; ======================================================================

[handler_consoleHandler]

; A handler can have its own level, which take precendence over the
; logger's level
level=DEBUG

; The two lines above is equivalent to StreamHandler(sys.stdout)
class=StreamHandler
args=(sys.stdout,)

; Which formatter to use with this handler
formatter=simpleFormatter

[handler_fileHandler]
class=FileHandler
args=("06 Solution2.log", "w")
formatter=simpleFormatter

; ======================================================================
; Formatters
; ======================================================================

[formatter_simpleFormatter]
format=%(asctime)s - %(name)s - %(levelname)s - %(message)s
